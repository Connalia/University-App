<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="p3150092DataSet" targetNamespace="http://tempuri.org/p3150092DataSet.xsd" xmlns:mstns="http://tempuri.org/p3150092DataSet.xsd" xmlns="http://tempuri.org/p3150092DataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="p3150092ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="p3150092ConnectionString (MySettings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.University_version2.My.MySettings.GlobalReference.Default.p3150092ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="baseTableAdapter" GeneratorDataComponentClassName="baseTableAdapter" Name="base" UserDataComponentName="baseTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="p3150092ConnectionString (MySettings)" DbObjectName="p3150092.dbo.base" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[base] WHERE (([bNum] = @Original_bNum) AND ([bYear] = @Original_bYear) AND ([dID] = @Original_dID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_bNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="bNum" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_bYear" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="bYear" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[base] ([bNum], [bYear], [dID]) VALUES (@bNum, @bYear, @dID);
SELECT bNum, bYear, dID FROM base WHERE (bYear = @bYear) AND (dID = @dID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@bNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="bNum" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@bYear" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="bYear" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT bNum, bYear, dID FROM dbo.base</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[base] SET [bNum] = @bNum, [bYear] = @bYear, [dID] = @dID WHERE (([bNum] = @Original_bNum) AND ([bYear] = @Original_bYear) AND ([dID] = @Original_dID));
SELECT bNum, bYear, dID FROM base WHERE (bYear = @bYear) AND (dID = @dID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@bNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="bNum" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@bYear" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="bYear" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_bNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="bNum" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_bYear" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="bYear" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="bNum" DataSetColumn="bNum" />
              <Mapping SourceColumn="bYear" DataSetColumn="bYear" />
              <Mapping SourceColumn="dID" DataSetColumn="dID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="departmentTableAdapter" GeneratorDataComponentClassName="departmentTableAdapter" Name="department" UserDataComponentName="departmentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="p3150092ConnectionString (MySettings)" DbObjectName="p3150092.dbo.department" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[department] WHERE (([dID] = @Original_dID) AND ([dName] = @Original_dName) AND ([dCode] = @Original_dCode) AND ([durationStudy] = @Original_durationStudy) AND ([dLink] = @Original_dLink) AND ([dNote] = @Original_dNote) AND ([dCity] = @Original_dCity) AND ([sectID] = @Original_sectID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_dName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_dCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_durationStudy" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="durationStudy" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_dLink" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dLink" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_dNote" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dNote" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_dCity" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dCity" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_sectID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="sectID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[department] ([dName], [dCode], [durationStudy], [dLink], [dNote], [dCity], [sectID]) VALUES (@dName, @dCode, @durationStudy, @dLink, @dNote, @dCity, @sectID);
SELECT dID, dName, dCode, durationStudy, dLink, dNote, dCity, sectID FROM department WHERE (dID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@dName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@dCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@durationStudy" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="durationStudy" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@dLink" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dLink" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@dNote" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dNote" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@dCity" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dCity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@sectID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="sectID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT dID, dName, dCode, durationStudy, dLink, dNote, dCity, sectID FROM dbo.department</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[department] SET [dName] = @dName, [dCode] = @dCode, [durationStudy] = @durationStudy, [dLink] = @dLink, [dNote] = @dNote, [dCity] = @dCity, [sectID] = @sectID WHERE (([dID] = @Original_dID) AND ([dName] = @Original_dName) AND ([dCode] = @Original_dCode) AND ([durationStudy] = @Original_durationStudy) AND ([dLink] = @Original_dLink) AND ([dNote] = @Original_dNote) AND ([dCity] = @Original_dCity) AND ([sectID] = @Original_sectID));
SELECT dID, dName, dCode, durationStudy, dLink, dNote, dCity, sectID FROM department WHERE (dID = @dID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@dName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@dCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@durationStudy" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="durationStudy" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@dLink" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dLink" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@dNote" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dNote" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@dCity" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dCity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@sectID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="sectID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_dName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_dCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_durationStudy" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="durationStudy" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_dLink" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dLink" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_dNote" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dNote" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_dCity" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dCity" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_sectID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="sectID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="dID" ColumnName="dID" DataSourceName="p3150092.dbo.department" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@dID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="dID" DataSetColumn="dID" />
              <Mapping SourceColumn="dName" DataSetColumn="dName" />
              <Mapping SourceColumn="dCode" DataSetColumn="dCode" />
              <Mapping SourceColumn="durationStudy" DataSetColumn="durationStudy" />
              <Mapping SourceColumn="dLink" DataSetColumn="dLink" />
              <Mapping SourceColumn="dNote" DataSetColumn="dNote" />
              <Mapping SourceColumn="dCity" DataSetColumn="dCity" />
              <Mapping SourceColumn="sectID" DataSetColumn="sectID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="department_extra_coursesTableAdapter" GeneratorDataComponentClassName="department_extra_coursesTableAdapter" Name="department_extra_courses" UserDataComponentName="department_extra_coursesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="p3150092ConnectionString (MySettings)" DbObjectName="p3150092.dbo.department_extra_courses" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[department_extra_courses] WHERE (([dID] = @Original_dID) AND ([extraID] = @Original_extraID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_extraID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="extraID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[department_extra_courses] ([dID], [extraID]) VALUES (@dID, @extraID);
SELECT dID, extraID FROM department_extra_courses WHERE (dID = @dID) AND (extraID = @extraID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@extraID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="extraID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT dID, extraID FROM dbo.department_extra_courses</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[department_extra_courses] SET [dID] = @dID, [extraID] = @extraID WHERE (([dID] = @Original_dID) AND ([extraID] = @Original_extraID));
SELECT dID, extraID FROM department_extra_courses WHERE (dID = @dID) AND (extraID = @extraID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@extraID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="extraID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_extraID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="extraID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="dID" DataSetColumn="dID" />
              <Mapping SourceColumn="extraID" DataSetColumn="extraID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="department_indicative_employment_placesTableAdapter" GeneratorDataComponentClassName="department_indicative_employment_placesTableAdapter" Name="department_indicative_employment_places" UserDataComponentName="department_indicative_employment_placesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="p3150092ConnectionString (MySettings)" DbObjectName="p3150092.dbo.department_indicative_employment_places" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[department_indicative_employment_places] WHERE (([dID] = @Original_dID) AND ([plID] = @Original_plID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_plID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="plID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[department_indicative_employment_places] ([dID], [plID]) VALUES (@dID, @plID);
SELECT dID, plID FROM department_indicative_employment_places WHERE (dID = @dID) AND (plID = @plID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@plID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="plID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT dID, plID FROM dbo.department_indicative_employment_places</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[department_indicative_employment_places] SET [dID] = @dID, [plID] = @plID WHERE (([dID] = @Original_dID) AND ([plID] = @Original_plID));
SELECT dID, plID FROM department_indicative_employment_places WHERE (dID = @dID) AND (plID = @plID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@plID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="plID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_plID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="plID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="dID" DataSetColumn="dID" />
              <Mapping SourceColumn="plID" DataSetColumn="plID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="department_postgraduateTableAdapter" GeneratorDataComponentClassName="department_postgraduateTableAdapter" Name="department_postgraduate" UserDataComponentName="department_postgraduateTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="p3150092ConnectionString (MySettings)" DbObjectName="p3150092.dbo.department_postgraduate" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[department_postgraduate] WHERE (([dID] = @Original_dID) AND ([gradID] = @Original_gradID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_gradID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="gradID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[department_postgraduate] ([dID], [gradID]) VALUES (@dID, @gradID);
SELECT dID, gradID FROM department_postgraduate WHERE (dID = @dID) AND (gradID = @gradID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@gradID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="gradID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT dID, gradID FROM dbo.department_postgraduate</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[department_postgraduate] SET [dID] = @dID, [gradID] = @gradID WHERE (([dID] = @Original_dID) AND ([gradID] = @Original_gradID));
SELECT dID, gradID FROM department_postgraduate WHERE (dID = @dID) AND (gradID = @gradID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@gradID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="gradID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_gradID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="gradID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="dID" DataSetColumn="dID" />
              <Mapping SourceColumn="gradID" DataSetColumn="gradID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="department_profession_jobTableAdapter" GeneratorDataComponentClassName="department_profession_jobTableAdapter" Name="department_profession_job" UserDataComponentName="department_profession_jobTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="p3150092ConnectionString (MySettings)" DbObjectName="p3150092.dbo.department_profession_job" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[department_profession_job] WHERE (([dID] = @Original_dID) AND ([jobID] = @Original_jobID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_jobID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="jobID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[department_profession_job] ([dID], [jobID]) VALUES (@dID, @jobID);
SELECT dID, jobID FROM department_profession_job WHERE (dID = @dID) AND (jobID = @jobID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@jobID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="jobID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT dID, jobID FROM dbo.department_profession_job</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[department_profession_job] SET [dID] = @dID, [jobID] = @jobID WHERE (([dID] = @Original_dID) AND ([jobID] = @Original_jobID));
SELECT dID, jobID FROM department_profession_job WHERE (dID = @dID) AND (jobID = @jobID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@jobID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="jobID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_jobID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="jobID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="dID" DataSetColumn="dID" />
              <Mapping SourceColumn="jobID" DataSetColumn="jobID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="department_professional_rightsNoteTableAdapter" GeneratorDataComponentClassName="department_professional_rightsNoteTableAdapter" Name="department_professional_rightsNote" UserDataComponentName="department_professional_rightsNoteTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="p3150092ConnectionString (MySettings)" DbObjectName="p3150092.dbo.department_professional_rightsNote" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[department_professional_rightsNote] WHERE (([dID] = @Original_dID) AND ([rID] = @Original_rID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_rID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="rID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[department_professional_rightsNote] ([dID], [rID]) VALUES (@dID, @rID);
SELECT dID, rID FROM department_professional_rightsNote WHERE (dID = @dID) AND (rID = @rID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@rID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="rID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT dID, rID FROM dbo.department_professional_rightsNote</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[department_professional_rightsNote] SET [dID] = @dID, [rID] = @rID WHERE (([dID] = @Original_dID) AND ([rID] = @Original_rID));
SELECT dID, rID FROM department_professional_rightsNote WHERE (dID = @dID) AND (rID = @rID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@rID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="rID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_rID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="rID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="dID" DataSetColumn="dID" />
              <Mapping SourceColumn="rID" DataSetColumn="rID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="department_scientific_fieldTableAdapter" GeneratorDataComponentClassName="department_scientific_fieldTableAdapter" Name="department_scientific_field" UserDataComponentName="department_scientific_fieldTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="p3150092ConnectionString (MySettings)" DbObjectName="p3150092.dbo.department_scientific_field" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[department_scientific_field] WHERE (([dID] = @Original_dID) AND ([scienID] = @Original_scienID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_scienID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="scienID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[department_scientific_field] ([dID], [scienID]) VALUES (@dID, @scienID);
SELECT dID, scienID FROM department_scientific_field WHERE (dID = @dID) AND (scienID = @scienID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@scienID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="scienID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT dID, scienID FROM dbo.department_scientific_field</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[department_scientific_field] SET [dID] = @dID, [scienID] = @scienID WHERE (([dID] = @Original_dID) AND ([scienID] = @Original_scienID));
SELECT dID, scienID FROM department_scientific_field WHERE (dID = @dID) AND (scienID = @scienID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@scienID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="scienID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_scienID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="scienID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="dID" DataSetColumn="dID" />
              <Mapping SourceColumn="scienID" DataSetColumn="scienID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="directionTableAdapter" GeneratorDataComponentClassName="directionTableAdapter" Name="direction" UserDataComponentName="directionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="p3150092ConnectionString (MySettings)" DbObjectName="p3150092.dbo.direction" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[direction] WHERE (([directionID] = @Original_directionID) AND ([directionName] = @Original_directionName) AND ([dID] = @Original_dID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_directionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="directionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_directionName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="directionName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[direction] ([directionName], [dID]) VALUES (@directionName, @dID);
SELECT directionID, directionName, dID FROM direction WHERE (directionID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@directionName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="directionName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT directionID, directionName, dID FROM dbo.direction</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[direction] SET [directionName] = @directionName, [dID] = @dID WHERE (([directionID] = @Original_directionID) AND ([directionName] = @Original_directionName) AND ([dID] = @Original_dID));
SELECT directionID, directionName, dID FROM direction WHERE (directionID = @directionID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@directionName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="directionName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_directionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="directionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_directionName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="directionName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_dID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="directionID" ColumnName="directionID" DataSourceName="p3150092.dbo.direction" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@directionID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="directionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="directionID" DataSetColumn="directionID" />
              <Mapping SourceColumn="directionName" DataSetColumn="directionName" />
              <Mapping SourceColumn="dID" DataSetColumn="dID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="extra_coursesTableAdapter" GeneratorDataComponentClassName="extra_coursesTableAdapter" Name="extra_courses" UserDataComponentName="extra_coursesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="p3150092ConnectionString (MySettings)" DbObjectName="p3150092.dbo.extra_courses" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[extra_courses] WHERE (([extraID] = @Original_extraID) AND ([extraName] = @Original_extraName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_extraID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="extraID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_extraName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="extraName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[extra_courses] ([extraName]) VALUES (@extraName);
SELECT extraID, extraName FROM extra_courses WHERE (extraID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@extraName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="extraName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT extraID, extraName FROM dbo.extra_courses</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[extra_courses] SET [extraName] = @extraName WHERE (([extraID] = @Original_extraID) AND ([extraName] = @Original_extraName));
SELECT extraID, extraName FROM extra_courses WHERE (extraID = @extraID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@extraName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="extraName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_extraID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="extraID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_extraName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="extraName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="extraID" ColumnName="extraID" DataSourceName="p3150092.dbo.extra_courses" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@extraID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="extraID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="extraID" DataSetColumn="extraID" />
              <Mapping SourceColumn="extraName" DataSetColumn="extraName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="indicative_employment_placesTableAdapter" GeneratorDataComponentClassName="indicative_employment_placesTableAdapter" Name="indicative_employment_places" UserDataComponentName="indicative_employment_placesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="p3150092ConnectionString (MySettings)" DbObjectName="p3150092.dbo.indicative_employment_places" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[indicative_employment_places] WHERE (([plID] = @Original_plID) AND ([plName] = @Original_plName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_plID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="plID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_plName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="plName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[indicative_employment_places] ([plName]) VALUES (@plName);
SELECT plID, plName FROM indicative_employment_places WHERE (plID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@plName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="plName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT plID, plName FROM dbo.indicative_employment_places</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[indicative_employment_places] SET [plName] = @plName WHERE (([plID] = @Original_plID) AND ([plName] = @Original_plName));
SELECT plID, plName FROM indicative_employment_places WHERE (plID = @plID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@plName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="plName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_plID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="plID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_plName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="plName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="plID" ColumnName="plID" DataSourceName="p3150092.dbo.indicative_employment_places" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@plID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="plID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="plID" DataSetColumn="plID" />
              <Mapping SourceColumn="plName" DataSetColumn="plName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="postgraduateTableAdapter" GeneratorDataComponentClassName="postgraduateTableAdapter" Name="postgraduate" UserDataComponentName="postgraduateTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="p3150092ConnectionString (MySettings)" DbObjectName="p3150092.dbo.postgraduate" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[postgraduate] WHERE (([gradID] = @Original_gradID) AND ([gradName] = @Original_gradName) AND ([gradNote] = @Original_gradNote) AND ([unID] = @Original_unID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_gradID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="gradID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_gradName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="gradName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_gradNote" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="gradNote" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_unID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="unID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[postgraduate] ([gradName], [gradNote], [unID]) VALUES (@gradName, @gradNote, @unID);
SELECT gradID, gradName, gradNote, unID FROM postgraduate WHERE (gradID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@gradName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="gradName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@gradNote" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="gradNote" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@unID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="unID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT gradID, gradName, gradNote, unID FROM dbo.postgraduate</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[postgraduate] SET [gradName] = @gradName, [gradNote] = @gradNote, [unID] = @unID WHERE (([gradID] = @Original_gradID) AND ([gradName] = @Original_gradName) AND ([gradNote] = @Original_gradNote) AND ([unID] = @Original_unID));
SELECT gradID, gradName, gradNote, unID FROM postgraduate WHERE (gradID = @gradID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@gradName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="gradName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@gradNote" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="gradNote" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@unID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="unID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_gradID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="gradID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_gradName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="gradName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_gradNote" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="gradNote" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_unID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="unID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="gradID" ColumnName="gradID" DataSourceName="p3150092.dbo.postgraduate" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@gradID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="gradID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="gradID" DataSetColumn="gradID" />
              <Mapping SourceColumn="gradName" DataSetColumn="gradName" />
              <Mapping SourceColumn="gradNote" DataSetColumn="gradNote" />
              <Mapping SourceColumn="unID" DataSetColumn="unID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="profession_jobTableAdapter" GeneratorDataComponentClassName="profession_jobTableAdapter" Name="profession_job" UserDataComponentName="profession_jobTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="p3150092ConnectionString (MySettings)" DbObjectName="p3150092.dbo.profession_job" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[profession_job] WHERE (([jobID] = @Original_jobID) AND ([jobName] = @Original_jobName) AND ([jobNote] = @Original_jobNote))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_jobID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="jobID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_jobName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="jobName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_jobNote" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="jobNote" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[profession_job] ([jobName], [jobNote]) VALUES (@jobName, @jobNote);
SELECT jobID, jobName, jobNote FROM profession_job WHERE (jobID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@jobName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="jobName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@jobNote" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="jobNote" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT jobID, jobName, jobNote FROM dbo.profession_job</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[profession_job] SET [jobName] = @jobName, [jobNote] = @jobNote WHERE (([jobID] = @Original_jobID) AND ([jobName] = @Original_jobName) AND ([jobNote] = @Original_jobNote));
SELECT jobID, jobName, jobNote FROM profession_job WHERE (jobID = @jobID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@jobName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="jobName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@jobNote" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="jobNote" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_jobID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="jobID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_jobName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="jobName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_jobNote" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="jobNote" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="jobID" ColumnName="jobID" DataSourceName="p3150092.dbo.profession_job" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@jobID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="jobID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="jobID" DataSetColumn="jobID" />
              <Mapping SourceColumn="jobName" DataSetColumn="jobName" />
              <Mapping SourceColumn="jobNote" DataSetColumn="jobNote" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="professional_rightsNoteTableAdapter" GeneratorDataComponentClassName="professional_rightsNoteTableAdapter" Name="professional_rightsNote" UserDataComponentName="professional_rightsNoteTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="p3150092ConnectionString (MySettings)" DbObjectName="p3150092.dbo.professional_rightsNote" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[professional_rightsNote] WHERE (([rID] = @Original_rID) AND ([rName] = @Original_rName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_rID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="rID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_rName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="rName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[professional_rightsNote] ([rName]) VALUES (@rName);
SELECT rID, rName FROM professional_rightsNote WHERE (rID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@rName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="rName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT rID, rName FROM dbo.professional_rightsNote</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[professional_rightsNote] SET [rName] = @rName WHERE (([rID] = @Original_rID) AND ([rName] = @Original_rName));
SELECT rID, rName FROM professional_rightsNote WHERE (rID = @rID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@rName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="rName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_rID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="rID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_rName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="rName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="rID" ColumnName="rID" DataSourceName="p3150092.dbo.professional_rightsNote" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@rID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="rID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="rID" DataSetColumn="rID" />
              <Mapping SourceColumn="rName" DataSetColumn="rName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="school_sectorTableAdapter" GeneratorDataComponentClassName="school_sectorTableAdapter" Name="school_sector" UserDataComponentName="school_sectorTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="p3150092ConnectionString (MySettings)" DbObjectName="p3150092.dbo.school_sector" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[school_sector] WHERE (([sectID] = @Original_sectID) AND ([sectName] = @Original_sectName) AND ([unID] = @Original_unID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_sectID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="sectID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_sectName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sectName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_unID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="unID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[school_sector] ([sectName], [unID]) VALUES (@sectName, @unID);
SELECT sectID, sectName, unID FROM school_sector WHERE (sectID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@sectName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sectName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@unID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="unID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT sectID, sectName, unID FROM dbo.school_sector</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[school_sector] SET [sectName] = @sectName, [unID] = @unID WHERE (([sectID] = @Original_sectID) AND ([sectName] = @Original_sectName) AND ([unID] = @Original_unID));
SELECT sectID, sectName, unID FROM school_sector WHERE (sectID = @sectID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@sectName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sectName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@unID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="unID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_sectID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="sectID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_sectName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sectName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_unID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="unID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="sectID" ColumnName="sectID" DataSourceName="p3150092.dbo.school_sector" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@sectID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="sectID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="sectID" DataSetColumn="sectID" />
              <Mapping SourceColumn="sectName" DataSetColumn="sectName" />
              <Mapping SourceColumn="unID" DataSetColumn="unID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="scientific_fieldTableAdapter" GeneratorDataComponentClassName="scientific_fieldTableAdapter" Name="scientific_field" UserDataComponentName="scientific_fieldTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="p3150092ConnectionString (MySettings)" DbObjectName="p3150092.dbo.scientific_field" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[scientific_field] WHERE (([scienID] = @Original_scienID) AND ([scienName] = @Original_scienName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_scienID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="scienID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_scienName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="scienName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[scientific_field] ([scienName]) VALUES (@scienName);
SELECT scienID, scienName FROM scientific_field WHERE (scienID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@scienName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="scienName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT scienID, scienName FROM dbo.scientific_field</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[scientific_field] SET [scienName] = @scienName WHERE (([scienID] = @Original_scienID) AND ([scienName] = @Original_scienName));
SELECT scienID, scienName FROM scientific_field WHERE (scienID = @scienID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@scienName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="scienName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_scienID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="scienID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_scienName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="scienName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="scienID" ColumnName="scienID" DataSourceName="p3150092.dbo.scientific_field" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@scienID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="scienID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="scienID" DataSetColumn="scienID" />
              <Mapping SourceColumn="scienName" DataSetColumn="scienName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="universityTableAdapter" GeneratorDataComponentClassName="universityTableAdapter" Name="university" UserDataComponentName="universityTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="p3150092ConnectionString (MySettings)" DbObjectName="p3150092.dbo.university" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[university] WHERE (([unID] = @Original_unID) AND ([unName] = @Original_unName) AND ([vID] = @Original_vID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_unID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="unID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_unName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="unName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_vID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="vID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[university] ([unName], [vID]) VALUES (@unName, @vID);
SELECT unID, unName, vID FROM university WHERE (unID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@unName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="unName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@vID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="vID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT unID, unName, vID FROM dbo.university</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[university] SET [unName] = @unName, [vID] = @vID WHERE (([unID] = @Original_unID) AND ([unName] = @Original_unName) AND ([vID] = @Original_vID));
SELECT unID, unName, vID FROM university WHERE (unID = @unID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@unName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="unName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@vID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="vID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_unID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="unID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_unName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="unName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_vID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="vID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="unID" ColumnName="unID" DataSourceName="p3150092.dbo.university" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@unID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="unID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="unID" DataSetColumn="unID" />
              <Mapping SourceColumn="unName" DataSetColumn="unName" />
              <Mapping SourceColumn="vID" DataSetColumn="vID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="variety_universityTableAdapter" GeneratorDataComponentClassName="variety_universityTableAdapter" Name="variety_university" UserDataComponentName="variety_universityTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="p3150092ConnectionString (MySettings)" DbObjectName="p3150092.dbo.variety_university" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[variety_university] WHERE (([vID] = @Original_vID) AND ([vName] = @Original_vName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_vID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="vID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_vName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="vName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[variety_university] ([vName]) VALUES (@vName);
SELECT vID, vName FROM variety_university WHERE (vID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@vName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="vName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT vID, vName FROM dbo.variety_university</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[variety_university] SET [vName] = @vName WHERE (([vID] = @Original_vID) AND ([vName] = @Original_vName));
SELECT vID, vName FROM variety_university WHERE (vID = @vID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@vName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="vName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_vID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="vID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_vName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="vName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="vID" ColumnName="vID" DataSourceName="p3150092.dbo.variety_university" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@vID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="vID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="vID" DataSetColumn="vID" />
              <Mapping SourceColumn="vName" DataSetColumn="vName" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="p3150092DataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="p3150092DataSet" msprop:Generator_UserDSName="p3150092DataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="base" msprop:Generator_TableClassName="baseDataTable" msprop:Generator_TableVarName="tablebase" msprop:Generator_TablePropName="base" msprop:Generator_RowDeletingName="baseRowDeleting" msprop:Generator_RowChangingName="baseRowChanging" msprop:Generator_RowEvHandlerName="baseRowChangeEventHandler" msprop:Generator_RowDeletedName="baseRowDeleted" msprop:Generator_UserTableName="base" msprop:Generator_RowChangedName="baseRowChanged" msprop:Generator_RowEvArgName="baseRowChangeEvent" msprop:Generator_RowClassName="baseRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="bNum" msprop:Generator_ColumnVarNameInTable="columnbNum" msprop:Generator_ColumnPropNameInRow="bNum" msprop:Generator_ColumnPropNameInTable="bNumColumn" msprop:Generator_UserColumnName="bNum" type="xs:int" />
              <xs:element name="bYear" msprop:Generator_ColumnVarNameInTable="columnbYear" msprop:Generator_ColumnPropNameInRow="bYear" msprop:Generator_ColumnPropNameInTable="bYearColumn" msprop:Generator_UserColumnName="bYear" type="xs:int" />
              <xs:element name="dID" msprop:Generator_ColumnVarNameInTable="columndID" msprop:Generator_ColumnPropNameInRow="dID" msprop:Generator_ColumnPropNameInTable="dIDColumn" msprop:Generator_UserColumnName="dID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="department" msprop:Generator_TableClassName="departmentDataTable" msprop:Generator_TableVarName="tabledepartment" msprop:Generator_TablePropName="department" msprop:Generator_RowDeletingName="departmentRowDeleting" msprop:Generator_RowChangingName="departmentRowChanging" msprop:Generator_RowEvHandlerName="departmentRowChangeEventHandler" msprop:Generator_RowDeletedName="departmentRowDeleted" msprop:Generator_UserTableName="department" msprop:Generator_RowChangedName="departmentRowChanged" msprop:Generator_RowEvArgName="departmentRowChangeEvent" msprop:Generator_RowClassName="departmentRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="dID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columndID" msprop:Generator_ColumnPropNameInRow="dID" msprop:Generator_ColumnPropNameInTable="dIDColumn" msprop:Generator_UserColumnName="dID" type="xs:int" />
              <xs:element name="dName" msprop:Generator_ColumnVarNameInTable="columndName" msprop:Generator_ColumnPropNameInRow="dName" msprop:Generator_ColumnPropNameInTable="dNameColumn" msprop:Generator_UserColumnName="dName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="dCode" msprop:Generator_ColumnVarNameInTable="columndCode" msprop:Generator_ColumnPropNameInRow="dCode" msprop:Generator_ColumnPropNameInTable="dCodeColumn" msprop:Generator_UserColumnName="dCode" type="xs:int" />
              <xs:element name="durationStudy" msprop:Generator_ColumnVarNameInTable="columndurationStudy" msprop:Generator_ColumnPropNameInRow="durationStudy" msprop:Generator_ColumnPropNameInTable="durationStudyColumn" msprop:Generator_UserColumnName="durationStudy" type="xs:int" />
              <xs:element name="dLink" msprop:Generator_ColumnVarNameInTable="columndLink" msprop:Generator_ColumnPropNameInRow="dLink" msprop:Generator_ColumnPropNameInTable="dLinkColumn" msprop:Generator_UserColumnName="dLink">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="dNote" msprop:Generator_ColumnVarNameInTable="columndNote" msprop:Generator_ColumnPropNameInRow="dNote" msprop:Generator_ColumnPropNameInTable="dNoteColumn" msprop:Generator_UserColumnName="dNote">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="1000" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="dCity" msprop:Generator_ColumnVarNameInTable="columndCity" msprop:Generator_ColumnPropNameInRow="dCity" msprop:Generator_ColumnPropNameInTable="dCityColumn" msprop:Generator_UserColumnName="dCity">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="sectID" msprop:Generator_ColumnVarNameInTable="columnsectID" msprop:Generator_ColumnPropNameInRow="sectID" msprop:Generator_ColumnPropNameInTable="sectIDColumn" msprop:Generator_UserColumnName="sectID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="department_extra_courses" msprop:Generator_TableClassName="department_extra_coursesDataTable" msprop:Generator_TableVarName="tabledepartment_extra_courses" msprop:Generator_TablePropName="department_extra_courses" msprop:Generator_RowDeletingName="department_extra_coursesRowDeleting" msprop:Generator_RowChangingName="department_extra_coursesRowChanging" msprop:Generator_RowEvHandlerName="department_extra_coursesRowChangeEventHandler" msprop:Generator_RowDeletedName="department_extra_coursesRowDeleted" msprop:Generator_UserTableName="department_extra_courses" msprop:Generator_RowChangedName="department_extra_coursesRowChanged" msprop:Generator_RowEvArgName="department_extra_coursesRowChangeEvent" msprop:Generator_RowClassName="department_extra_coursesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="dID" msprop:Generator_ColumnVarNameInTable="columndID" msprop:Generator_ColumnPropNameInRow="dID" msprop:Generator_ColumnPropNameInTable="dIDColumn" msprop:Generator_UserColumnName="dID" type="xs:int" />
              <xs:element name="extraID" msprop:Generator_ColumnVarNameInTable="columnextraID" msprop:Generator_ColumnPropNameInRow="extraID" msprop:Generator_ColumnPropNameInTable="extraIDColumn" msprop:Generator_UserColumnName="extraID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="department_indicative_employment_places" msprop:Generator_TableClassName="department_indicative_employment_placesDataTable" msprop:Generator_TableVarName="tabledepartment_indicative_employment_places" msprop:Generator_TablePropName="department_indicative_employment_places" msprop:Generator_RowDeletingName="department_indicative_employment_placesRowDeleting" msprop:Generator_RowChangingName="department_indicative_employment_placesRowChanging" msprop:Generator_RowEvHandlerName="department_indicative_employment_placesRowChangeEventHandler" msprop:Generator_RowDeletedName="department_indicative_employment_placesRowDeleted" msprop:Generator_UserTableName="department_indicative_employment_places" msprop:Generator_RowChangedName="department_indicative_employment_placesRowChanged" msprop:Generator_RowEvArgName="department_indicative_employment_placesRowChangeEvent" msprop:Generator_RowClassName="department_indicative_employment_placesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="dID" msprop:Generator_ColumnVarNameInTable="columndID" msprop:Generator_ColumnPropNameInRow="dID" msprop:Generator_ColumnPropNameInTable="dIDColumn" msprop:Generator_UserColumnName="dID" type="xs:int" />
              <xs:element name="plID" msprop:Generator_ColumnVarNameInTable="columnplID" msprop:Generator_ColumnPropNameInRow="plID" msprop:Generator_ColumnPropNameInTable="plIDColumn" msprop:Generator_UserColumnName="plID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="department_postgraduate" msprop:Generator_TableClassName="department_postgraduateDataTable" msprop:Generator_TableVarName="tabledepartment_postgraduate" msprop:Generator_TablePropName="department_postgraduate" msprop:Generator_RowDeletingName="department_postgraduateRowDeleting" msprop:Generator_RowChangingName="department_postgraduateRowChanging" msprop:Generator_RowEvHandlerName="department_postgraduateRowChangeEventHandler" msprop:Generator_RowDeletedName="department_postgraduateRowDeleted" msprop:Generator_UserTableName="department_postgraduate" msprop:Generator_RowChangedName="department_postgraduateRowChanged" msprop:Generator_RowEvArgName="department_postgraduateRowChangeEvent" msprop:Generator_RowClassName="department_postgraduateRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="dID" msprop:Generator_ColumnVarNameInTable="columndID" msprop:Generator_ColumnPropNameInRow="dID" msprop:Generator_ColumnPropNameInTable="dIDColumn" msprop:Generator_UserColumnName="dID" type="xs:int" />
              <xs:element name="gradID" msprop:Generator_ColumnVarNameInTable="columngradID" msprop:Generator_ColumnPropNameInRow="gradID" msprop:Generator_ColumnPropNameInTable="gradIDColumn" msprop:Generator_UserColumnName="gradID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="department_profession_job" msprop:Generator_TableClassName="department_profession_jobDataTable" msprop:Generator_TableVarName="tabledepartment_profession_job" msprop:Generator_TablePropName="department_profession_job" msprop:Generator_RowDeletingName="department_profession_jobRowDeleting" msprop:Generator_RowChangingName="department_profession_jobRowChanging" msprop:Generator_RowEvHandlerName="department_profession_jobRowChangeEventHandler" msprop:Generator_RowDeletedName="department_profession_jobRowDeleted" msprop:Generator_UserTableName="department_profession_job" msprop:Generator_RowChangedName="department_profession_jobRowChanged" msprop:Generator_RowEvArgName="department_profession_jobRowChangeEvent" msprop:Generator_RowClassName="department_profession_jobRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="dID" msprop:Generator_ColumnVarNameInTable="columndID" msprop:Generator_ColumnPropNameInRow="dID" msprop:Generator_ColumnPropNameInTable="dIDColumn" msprop:Generator_UserColumnName="dID" type="xs:int" />
              <xs:element name="jobID" msprop:Generator_ColumnVarNameInTable="columnjobID" msprop:Generator_ColumnPropNameInRow="jobID" msprop:Generator_ColumnPropNameInTable="jobIDColumn" msprop:Generator_UserColumnName="jobID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="department_professional_rightsNote" msprop:Generator_TableClassName="department_professional_rightsNoteDataTable" msprop:Generator_TableVarName="tabledepartment_professional_rightsNote" msprop:Generator_TablePropName="department_professional_rightsNote" msprop:Generator_RowDeletingName="department_professional_rightsNoteRowDeleting" msprop:Generator_RowChangingName="department_professional_rightsNoteRowChanging" msprop:Generator_RowEvHandlerName="department_professional_rightsNoteRowChangeEventHandler" msprop:Generator_RowDeletedName="department_professional_rightsNoteRowDeleted" msprop:Generator_UserTableName="department_professional_rightsNote" msprop:Generator_RowChangedName="department_professional_rightsNoteRowChanged" msprop:Generator_RowEvArgName="department_professional_rightsNoteRowChangeEvent" msprop:Generator_RowClassName="department_professional_rightsNoteRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="dID" msprop:Generator_ColumnVarNameInTable="columndID" msprop:Generator_ColumnPropNameInRow="dID" msprop:Generator_ColumnPropNameInTable="dIDColumn" msprop:Generator_UserColumnName="dID" type="xs:int" />
              <xs:element name="rID" msprop:Generator_ColumnVarNameInTable="columnrID" msprop:Generator_ColumnPropNameInRow="rID" msprop:Generator_ColumnPropNameInTable="rIDColumn" msprop:Generator_UserColumnName="rID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="department_scientific_field" msprop:Generator_TableClassName="department_scientific_fieldDataTable" msprop:Generator_TableVarName="tabledepartment_scientific_field" msprop:Generator_TablePropName="department_scientific_field" msprop:Generator_RowDeletingName="department_scientific_fieldRowDeleting" msprop:Generator_RowChangingName="department_scientific_fieldRowChanging" msprop:Generator_RowEvHandlerName="department_scientific_fieldRowChangeEventHandler" msprop:Generator_RowDeletedName="department_scientific_fieldRowDeleted" msprop:Generator_UserTableName="department_scientific_field" msprop:Generator_RowChangedName="department_scientific_fieldRowChanged" msprop:Generator_RowEvArgName="department_scientific_fieldRowChangeEvent" msprop:Generator_RowClassName="department_scientific_fieldRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="dID" msprop:Generator_ColumnVarNameInTable="columndID" msprop:Generator_ColumnPropNameInRow="dID" msprop:Generator_ColumnPropNameInTable="dIDColumn" msprop:Generator_UserColumnName="dID" type="xs:int" />
              <xs:element name="scienID" msprop:Generator_ColumnVarNameInTable="columnscienID" msprop:Generator_ColumnPropNameInRow="scienID" msprop:Generator_ColumnPropNameInTable="scienIDColumn" msprop:Generator_UserColumnName="scienID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="direction" msprop:Generator_TableClassName="directionDataTable" msprop:Generator_TableVarName="tabledirection" msprop:Generator_TablePropName="direction" msprop:Generator_RowDeletingName="directionRowDeleting" msprop:Generator_RowChangingName="directionRowChanging" msprop:Generator_RowEvHandlerName="directionRowChangeEventHandler" msprop:Generator_RowDeletedName="directionRowDeleted" msprop:Generator_UserTableName="direction" msprop:Generator_RowChangedName="directionRowChanged" msprop:Generator_RowEvArgName="directionRowChangeEvent" msprop:Generator_RowClassName="directionRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="directionID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columndirectionID" msprop:Generator_ColumnPropNameInRow="directionID" msprop:Generator_ColumnPropNameInTable="directionIDColumn" msprop:Generator_UserColumnName="directionID" type="xs:int" />
              <xs:element name="directionName" msprop:Generator_ColumnVarNameInTable="columndirectionName" msprop:Generator_ColumnPropNameInRow="directionName" msprop:Generator_ColumnPropNameInTable="directionNameColumn" msprop:Generator_UserColumnName="directionName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="dID" msprop:Generator_ColumnVarNameInTable="columndID" msprop:Generator_ColumnPropNameInRow="dID" msprop:Generator_ColumnPropNameInTable="dIDColumn" msprop:Generator_UserColumnName="dID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="extra_courses" msprop:Generator_TableClassName="extra_coursesDataTable" msprop:Generator_TableVarName="tableextra_courses" msprop:Generator_TablePropName="extra_courses" msprop:Generator_RowDeletingName="extra_coursesRowDeleting" msprop:Generator_RowChangingName="extra_coursesRowChanging" msprop:Generator_RowEvHandlerName="extra_coursesRowChangeEventHandler" msprop:Generator_RowDeletedName="extra_coursesRowDeleted" msprop:Generator_UserTableName="extra_courses" msprop:Generator_RowChangedName="extra_coursesRowChanged" msprop:Generator_RowEvArgName="extra_coursesRowChangeEvent" msprop:Generator_RowClassName="extra_coursesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="extraID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnextraID" msprop:Generator_ColumnPropNameInRow="extraID" msprop:Generator_ColumnPropNameInTable="extraIDColumn" msprop:Generator_UserColumnName="extraID" type="xs:int" />
              <xs:element name="extraName" msprop:Generator_ColumnVarNameInTable="columnextraName" msprop:Generator_ColumnPropNameInRow="extraName" msprop:Generator_ColumnPropNameInTable="extraNameColumn" msprop:Generator_UserColumnName="extraName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="indicative_employment_places" msprop:Generator_TableClassName="indicative_employment_placesDataTable" msprop:Generator_TableVarName="tableindicative_employment_places" msprop:Generator_TablePropName="indicative_employment_places" msprop:Generator_RowDeletingName="indicative_employment_placesRowDeleting" msprop:Generator_RowChangingName="indicative_employment_placesRowChanging" msprop:Generator_RowEvHandlerName="indicative_employment_placesRowChangeEventHandler" msprop:Generator_RowDeletedName="indicative_employment_placesRowDeleted" msprop:Generator_UserTableName="indicative_employment_places" msprop:Generator_RowChangedName="indicative_employment_placesRowChanged" msprop:Generator_RowEvArgName="indicative_employment_placesRowChangeEvent" msprop:Generator_RowClassName="indicative_employment_placesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="plID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnplID" msprop:Generator_ColumnPropNameInRow="plID" msprop:Generator_ColumnPropNameInTable="plIDColumn" msprop:Generator_UserColumnName="plID" type="xs:int" />
              <xs:element name="plName" msprop:Generator_ColumnVarNameInTable="columnplName" msprop:Generator_ColumnPropNameInRow="plName" msprop:Generator_ColumnPropNameInTable="plNameColumn" msprop:Generator_UserColumnName="plName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="550" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="postgraduate" msprop:Generator_TableClassName="postgraduateDataTable" msprop:Generator_TableVarName="tablepostgraduate" msprop:Generator_TablePropName="postgraduate" msprop:Generator_RowDeletingName="postgraduateRowDeleting" msprop:Generator_RowChangingName="postgraduateRowChanging" msprop:Generator_RowEvHandlerName="postgraduateRowChangeEventHandler" msprop:Generator_RowDeletedName="postgraduateRowDeleted" msprop:Generator_UserTableName="postgraduate" msprop:Generator_RowChangedName="postgraduateRowChanged" msprop:Generator_RowEvArgName="postgraduateRowChangeEvent" msprop:Generator_RowClassName="postgraduateRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="gradID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columngradID" msprop:Generator_ColumnPropNameInRow="gradID" msprop:Generator_ColumnPropNameInTable="gradIDColumn" msprop:Generator_UserColumnName="gradID" type="xs:int" />
              <xs:element name="gradName" msprop:Generator_ColumnVarNameInTable="columngradName" msprop:Generator_ColumnPropNameInRow="gradName" msprop:Generator_ColumnPropNameInTable="gradNameColumn" msprop:Generator_UserColumnName="gradName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="gradNote" msprop:Generator_ColumnVarNameInTable="columngradNote" msprop:Generator_ColumnPropNameInRow="gradNote" msprop:Generator_ColumnPropNameInTable="gradNoteColumn" msprop:Generator_UserColumnName="gradNote">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="150" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="unID" msprop:Generator_ColumnVarNameInTable="columnunID" msprop:Generator_ColumnPropNameInRow="unID" msprop:Generator_ColumnPropNameInTable="unIDColumn" msprop:Generator_UserColumnName="unID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="profession_job" msprop:Generator_TableClassName="profession_jobDataTable" msprop:Generator_TableVarName="tableprofession_job" msprop:Generator_TablePropName="profession_job" msprop:Generator_RowDeletingName="profession_jobRowDeleting" msprop:Generator_RowChangingName="profession_jobRowChanging" msprop:Generator_RowEvHandlerName="profession_jobRowChangeEventHandler" msprop:Generator_RowDeletedName="profession_jobRowDeleted" msprop:Generator_UserTableName="profession_job" msprop:Generator_RowChangedName="profession_jobRowChanged" msprop:Generator_RowEvArgName="profession_jobRowChangeEvent" msprop:Generator_RowClassName="profession_jobRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="jobID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnjobID" msprop:Generator_ColumnPropNameInRow="jobID" msprop:Generator_ColumnPropNameInTable="jobIDColumn" msprop:Generator_UserColumnName="jobID" type="xs:int" />
              <xs:element name="jobName" msprop:Generator_ColumnVarNameInTable="columnjobName" msprop:Generator_ColumnPropNameInRow="jobName" msprop:Generator_ColumnPropNameInTable="jobNameColumn" msprop:Generator_UserColumnName="jobName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="jobNote" msprop:Generator_ColumnVarNameInTable="columnjobNote" msprop:Generator_ColumnPropNameInRow="jobNote" msprop:Generator_ColumnPropNameInTable="jobNoteColumn" msprop:Generator_UserColumnName="jobNote">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="200" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="professional_rightsNote" msprop:Generator_TableClassName="professional_rightsNoteDataTable" msprop:Generator_TableVarName="tableprofessional_rightsNote" msprop:Generator_TablePropName="professional_rightsNote" msprop:Generator_RowDeletingName="professional_rightsNoteRowDeleting" msprop:Generator_RowChangingName="professional_rightsNoteRowChanging" msprop:Generator_RowEvHandlerName="professional_rightsNoteRowChangeEventHandler" msprop:Generator_RowDeletedName="professional_rightsNoteRowDeleted" msprop:Generator_UserTableName="professional_rightsNote" msprop:Generator_RowChangedName="professional_rightsNoteRowChanged" msprop:Generator_RowEvArgName="professional_rightsNoteRowChangeEvent" msprop:Generator_RowClassName="professional_rightsNoteRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="rID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnrID" msprop:Generator_ColumnPropNameInRow="rID" msprop:Generator_ColumnPropNameInTable="rIDColumn" msprop:Generator_UserColumnName="rID" type="xs:int" />
              <xs:element name="rName" msprop:Generator_ColumnVarNameInTable="columnrName" msprop:Generator_ColumnPropNameInRow="rName" msprop:Generator_ColumnPropNameInTable="rNameColumn" msprop:Generator_UserColumnName="rName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2000" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="school_sector" msprop:Generator_TableClassName="school_sectorDataTable" msprop:Generator_TableVarName="tableschool_sector" msprop:Generator_TablePropName="school_sector" msprop:Generator_RowDeletingName="school_sectorRowDeleting" msprop:Generator_RowChangingName="school_sectorRowChanging" msprop:Generator_RowEvHandlerName="school_sectorRowChangeEventHandler" msprop:Generator_RowDeletedName="school_sectorRowDeleted" msprop:Generator_UserTableName="school_sector" msprop:Generator_RowChangedName="school_sectorRowChanged" msprop:Generator_RowEvArgName="school_sectorRowChangeEvent" msprop:Generator_RowClassName="school_sectorRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="sectID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnsectID" msprop:Generator_ColumnPropNameInRow="sectID" msprop:Generator_ColumnPropNameInTable="sectIDColumn" msprop:Generator_UserColumnName="sectID" type="xs:int" />
              <xs:element name="sectName" msprop:Generator_ColumnVarNameInTable="columnsectName" msprop:Generator_ColumnPropNameInRow="sectName" msprop:Generator_ColumnPropNameInTable="sectNameColumn" msprop:Generator_UserColumnName="sectName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="unID" msprop:Generator_ColumnVarNameInTable="columnunID" msprop:Generator_ColumnPropNameInRow="unID" msprop:Generator_ColumnPropNameInTable="unIDColumn" msprop:Generator_UserColumnName="unID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="scientific_field" msprop:Generator_TableClassName="scientific_fieldDataTable" msprop:Generator_TableVarName="tablescientific_field" msprop:Generator_TablePropName="scientific_field" msprop:Generator_RowDeletingName="scientific_fieldRowDeleting" msprop:Generator_RowChangingName="scientific_fieldRowChanging" msprop:Generator_RowEvHandlerName="scientific_fieldRowChangeEventHandler" msprop:Generator_RowDeletedName="scientific_fieldRowDeleted" msprop:Generator_UserTableName="scientific_field" msprop:Generator_RowChangedName="scientific_fieldRowChanged" msprop:Generator_RowEvArgName="scientific_fieldRowChangeEvent" msprop:Generator_RowClassName="scientific_fieldRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="scienID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnscienID" msprop:Generator_ColumnPropNameInRow="scienID" msprop:Generator_ColumnPropNameInTable="scienIDColumn" msprop:Generator_UserColumnName="scienID" type="xs:int" />
              <xs:element name="scienName" msprop:Generator_ColumnVarNameInTable="columnscienName" msprop:Generator_ColumnPropNameInRow="scienName" msprop:Generator_ColumnPropNameInTable="scienNameColumn" msprop:Generator_UserColumnName="scienName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="university" msprop:Generator_TableClassName="universityDataTable" msprop:Generator_TableVarName="tableuniversity" msprop:Generator_TablePropName="university" msprop:Generator_RowDeletingName="universityRowDeleting" msprop:Generator_RowChangingName="universityRowChanging" msprop:Generator_RowEvHandlerName="universityRowChangeEventHandler" msprop:Generator_RowDeletedName="universityRowDeleted" msprop:Generator_UserTableName="university" msprop:Generator_RowChangedName="universityRowChanged" msprop:Generator_RowEvArgName="universityRowChangeEvent" msprop:Generator_RowClassName="universityRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="unID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnunID" msprop:Generator_ColumnPropNameInRow="unID" msprop:Generator_ColumnPropNameInTable="unIDColumn" msprop:Generator_UserColumnName="unID" type="xs:int" />
              <xs:element name="unName" msprop:Generator_ColumnVarNameInTable="columnunName" msprop:Generator_ColumnPropNameInRow="unName" msprop:Generator_ColumnPropNameInTable="unNameColumn" msprop:Generator_UserColumnName="unName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="vID" msprop:Generator_ColumnVarNameInTable="columnvID" msprop:Generator_ColumnPropNameInRow="vID" msprop:Generator_ColumnPropNameInTable="vIDColumn" msprop:Generator_UserColumnName="vID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="variety_university" msprop:Generator_TableClassName="variety_universityDataTable" msprop:Generator_TableVarName="tablevariety_university" msprop:Generator_TablePropName="variety_university" msprop:Generator_RowDeletingName="variety_universityRowDeleting" msprop:Generator_RowChangingName="variety_universityRowChanging" msprop:Generator_RowEvHandlerName="variety_universityRowChangeEventHandler" msprop:Generator_RowDeletedName="variety_universityRowDeleted" msprop:Generator_UserTableName="variety_university" msprop:Generator_RowChangedName="variety_universityRowChanged" msprop:Generator_RowEvArgName="variety_universityRowChangeEvent" msprop:Generator_RowClassName="variety_universityRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="vID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnvID" msprop:Generator_ColumnPropNameInRow="vID" msprop:Generator_ColumnPropNameInTable="vIDColumn" msprop:Generator_UserColumnName="vID" type="xs:int" />
              <xs:element name="vName" msprop:Generator_ColumnVarNameInTable="columnvName" msprop:Generator_ColumnPropNameInRow="vName" msprop:Generator_ColumnPropNameInTable="vNameColumn" msprop:Generator_UserColumnName="vName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:base" />
      <xs:field xpath="mstns:bYear" />
      <xs:field xpath="mstns:dID" />
    </xs:unique>
    <xs:unique name="department_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:department" />
      <xs:field xpath="mstns:dID" />
    </xs:unique>
    <xs:unique name="department_extra_courses_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:department_extra_courses" />
      <xs:field xpath="mstns:dID" />
      <xs:field xpath="mstns:extraID" />
    </xs:unique>
    <xs:unique name="department_indicative_employment_places_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:department_indicative_employment_places" />
      <xs:field xpath="mstns:dID" />
      <xs:field xpath="mstns:plID" />
    </xs:unique>
    <xs:unique name="department_postgraduate_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:department_postgraduate" />
      <xs:field xpath="mstns:dID" />
      <xs:field xpath="mstns:gradID" />
    </xs:unique>
    <xs:unique name="department_profession_job_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:department_profession_job" />
      <xs:field xpath="mstns:dID" />
      <xs:field xpath="mstns:jobID" />
    </xs:unique>
    <xs:unique name="department_professional_rightsNote_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:department_professional_rightsNote" />
      <xs:field xpath="mstns:dID" />
      <xs:field xpath="mstns:rID" />
    </xs:unique>
    <xs:unique name="department_scientific_field_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:department_scientific_field" />
      <xs:field xpath="mstns:dID" />
      <xs:field xpath="mstns:scienID" />
    </xs:unique>
    <xs:unique name="direction_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:direction" />
      <xs:field xpath="mstns:directionID" />
    </xs:unique>
    <xs:unique name="extra_courses_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:extra_courses" />
      <xs:field xpath="mstns:extraID" />
    </xs:unique>
    <xs:unique name="indicative_employment_places_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:indicative_employment_places" />
      <xs:field xpath="mstns:plID" />
    </xs:unique>
    <xs:unique name="postgraduate_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:postgraduate" />
      <xs:field xpath="mstns:gradID" />
    </xs:unique>
    <xs:unique name="profession_job_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:profession_job" />
      <xs:field xpath="mstns:jobID" />
    </xs:unique>
    <xs:unique name="professional_rightsNote_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:professional_rightsNote" />
      <xs:field xpath="mstns:rID" />
    </xs:unique>
    <xs:unique name="school_sector_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:school_sector" />
      <xs:field xpath="mstns:sectID" />
    </xs:unique>
    <xs:unique name="scientific_field_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:scientific_field" />
      <xs:field xpath="mstns:scienID" />
    </xs:unique>
    <xs:unique name="university_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:university" />
      <xs:field xpath="mstns:unID" />
    </xs:unique>
    <xs:unique name="variety_university_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:variety_university" />
      <xs:field xpath="mstns:vID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="fk1_department" msdata:parent="department" msdata:child="base" msdata:parentkey="dID" msdata:childkey="dID" msprop:Generator_UserChildTable="base" msprop:Generator_ChildPropName="GetbaseRows" msprop:Generator_UserRelationName="fk1_department" msprop:Generator_RelationVarName="relationfk1_department" msprop:Generator_UserParentTable="department" msprop:Generator_ParentPropName="departmentRow" />
      <msdata:Relationship name="fk_department" msdata:parent="school_sector" msdata:child="department" msdata:parentkey="sectID" msdata:childkey="sectID" msprop:Generator_UserChildTable="department" msprop:Generator_ChildPropName="GetdepartmentRows" msprop:Generator_UserRelationName="fk_department" msprop:Generator_RelationVarName="relationfk_department" msprop:Generator_UserParentTable="school_sector" msprop:Generator_ParentPropName="school_sectorRow" />
      <msdata:Relationship name="fk1_department_extra_courses" msdata:parent="department" msdata:child="department_extra_courses" msdata:parentkey="dID" msdata:childkey="dID" msprop:Generator_UserChildTable="department_extra_courses" msprop:Generator_ChildPropName="Getdepartment_extra_coursesRows" msprop:Generator_UserRelationName="fk1_department_extra_courses" msprop:Generator_ParentPropName="departmentRow" msprop:Generator_RelationVarName="relationfk1_department_extra_courses" msprop:Generator_UserParentTable="department" />
      <msdata:Relationship name="fk2_department_extra_courses" msdata:parent="extra_courses" msdata:child="department_extra_courses" msdata:parentkey="extraID" msdata:childkey="extraID" msprop:Generator_UserChildTable="department_extra_courses" msprop:Generator_ChildPropName="Getdepartment_extra_coursesRows" msprop:Generator_UserRelationName="fk2_department_extra_courses" msprop:Generator_RelationVarName="relationfk2_department_extra_courses" msprop:Generator_UserParentTable="extra_courses" msprop:Generator_ParentPropName="extra_coursesRow" />
      <msdata:Relationship name="fk1_department_indicative_employment_places" msdata:parent="department" msdata:child="department_indicative_employment_places" msdata:parentkey="dID" msdata:childkey="dID" msprop:Generator_UserChildTable="department_indicative_employment_places" msprop:Generator_ChildPropName="Getdepartment_indicative_employment_placesRows" msprop:Generator_UserRelationName="fk1_department_indicative_employment_places" msprop:Generator_ParentPropName="departmentRow" msprop:Generator_RelationVarName="relationfk1_department_indicative_employment_places" msprop:Generator_UserParentTable="department" />
      <msdata:Relationship name="fk2_department_indicative_employment_places" msdata:parent="indicative_employment_places" msdata:child="department_indicative_employment_places" msdata:parentkey="plID" msdata:childkey="plID" msprop:Generator_UserChildTable="department_indicative_employment_places" msprop:Generator_ChildPropName="Getdepartment_indicative_employment_placesRows" msprop:Generator_UserRelationName="fk2_department_indicative_employment_places" msprop:Generator_RelationVarName="relationfk2_department_indicative_employment_places" msprop:Generator_UserParentTable="indicative_employment_places" msprop:Generator_ParentPropName="indicative_employment_placesRow" />
      <msdata:Relationship name="fk1_department_postgraduate" msdata:parent="department" msdata:child="department_postgraduate" msdata:parentkey="dID" msdata:childkey="dID" msprop:Generator_UserChildTable="department_postgraduate" msprop:Generator_ChildPropName="Getdepartment_postgraduateRows" msprop:Generator_UserRelationName="fk1_department_postgraduate" msprop:Generator_ParentPropName="departmentRow" msprop:Generator_RelationVarName="relationfk1_department_postgraduate" msprop:Generator_UserParentTable="department" />
      <msdata:Relationship name="fk2_department_postgraduate" msdata:parent="postgraduate" msdata:child="department_postgraduate" msdata:parentkey="gradID" msdata:childkey="gradID" msprop:Generator_UserChildTable="department_postgraduate" msprop:Generator_ChildPropName="Getdepartment_postgraduateRows" msprop:Generator_UserRelationName="fk2_department_postgraduate" msprop:Generator_RelationVarName="relationfk2_department_postgraduate" msprop:Generator_UserParentTable="postgraduate" msprop:Generator_ParentPropName="postgraduateRow" />
      <msdata:Relationship name="fk1_department_profession_job" msdata:parent="department" msdata:child="department_profession_job" msdata:parentkey="dID" msdata:childkey="dID" msprop:Generator_UserChildTable="department_profession_job" msprop:Generator_ChildPropName="Getdepartment_profession_jobRows" msprop:Generator_UserRelationName="fk1_department_profession_job" msprop:Generator_ParentPropName="departmentRow" msprop:Generator_RelationVarName="relationfk1_department_profession_job" msprop:Generator_UserParentTable="department" />
      <msdata:Relationship name="fk2_department_profession_job" msdata:parent="profession_job" msdata:child="department_profession_job" msdata:parentkey="jobID" msdata:childkey="jobID" msprop:Generator_UserChildTable="department_profession_job" msprop:Generator_ChildPropName="Getdepartment_profession_jobRows" msprop:Generator_UserRelationName="fk2_department_profession_job" msprop:Generator_RelationVarName="relationfk2_department_profession_job" msprop:Generator_UserParentTable="profession_job" msprop:Generator_ParentPropName="profession_jobRow" />
      <msdata:Relationship name="fk1_department_professional_rightsNote" msdata:parent="department" msdata:child="department_professional_rightsNote" msdata:parentkey="dID" msdata:childkey="dID" msprop:Generator_UserChildTable="department_professional_rightsNote" msprop:Generator_ChildPropName="Getdepartment_professional_rightsNoteRows" msprop:Generator_UserRelationName="fk1_department_professional_rightsNote" msprop:Generator_ParentPropName="departmentRow" msprop:Generator_RelationVarName="relationfk1_department_professional_rightsNote" msprop:Generator_UserParentTable="department" />
      <msdata:Relationship name="fk2_department_professional_rightsNote" msdata:parent="professional_rightsNote" msdata:child="department_professional_rightsNote" msdata:parentkey="rID" msdata:childkey="rID" msprop:Generator_UserChildTable="department_professional_rightsNote" msprop:Generator_ChildPropName="Getdepartment_professional_rightsNoteRows" msprop:Generator_UserRelationName="fk2_department_professional_rightsNote" msprop:Generator_RelationVarName="relationfk2_department_professional_rightsNote" msprop:Generator_UserParentTable="professional_rightsNote" msprop:Generator_ParentPropName="professional_rightsNoteRow" />
      <msdata:Relationship name="fk1_department_scientific_field" msdata:parent="department" msdata:child="department_scientific_field" msdata:parentkey="dID" msdata:childkey="dID" msprop:Generator_UserChildTable="department_scientific_field" msprop:Generator_ChildPropName="Getdepartment_scientific_fieldRows" msprop:Generator_UserRelationName="fk1_department_scientific_field" msprop:Generator_ParentPropName="departmentRow" msprop:Generator_RelationVarName="relationfk1_department_scientific_field" msprop:Generator_UserParentTable="department" />
      <msdata:Relationship name="fk2_department_scientific_field" msdata:parent="scientific_field" msdata:child="department_scientific_field" msdata:parentkey="scienID" msdata:childkey="scienID" msprop:Generator_UserChildTable="department_scientific_field" msprop:Generator_ChildPropName="Getdepartment_scientific_fieldRows" msprop:Generator_UserRelationName="fk2_department_scientific_field" msprop:Generator_RelationVarName="relationfk2_department_scientific_field" msprop:Generator_UserParentTable="scientific_field" msprop:Generator_ParentPropName="scientific_fieldRow" />
      <msdata:Relationship name="fk_direction" msdata:parent="department" msdata:child="direction" msdata:parentkey="dID" msdata:childkey="dID" msprop:Generator_UserChildTable="direction" msprop:Generator_ChildPropName="GetdirectionRows" msprop:Generator_UserRelationName="fk_direction" msprop:Generator_ParentPropName="departmentRow" msprop:Generator_RelationVarName="relationfk_direction" msprop:Generator_UserParentTable="department" />
      <msdata:Relationship name="fk_postgraduate" msdata:parent="university" msdata:child="postgraduate" msdata:parentkey="unID" msdata:childkey="unID" msprop:Generator_UserChildTable="postgraduate" msprop:Generator_ChildPropName="GetpostgraduateRows" msprop:Generator_UserRelationName="fk_postgraduate" msprop:Generator_RelationVarName="relationfk_postgraduate" msprop:Generator_UserParentTable="university" msprop:Generator_ParentPropName="universityRow" />
      <msdata:Relationship name="fk_school_sector" msdata:parent="university" msdata:child="school_sector" msdata:parentkey="unID" msdata:childkey="unID" msprop:Generator_UserChildTable="school_sector" msprop:Generator_ChildPropName="Getschool_sectorRows" msprop:Generator_UserRelationName="fk_school_sector" msprop:Generator_RelationVarName="relationfk_school_sector" msprop:Generator_UserParentTable="university" msprop:Generator_ParentPropName="universityRow" />
      <msdata:Relationship name="fk_university" msdata:parent="variety_university" msdata:child="university" msdata:parentkey="vID" msdata:childkey="vID" msprop:Generator_UserChildTable="university" msprop:Generator_ChildPropName="GetuniversityRows" msprop:Generator_UserRelationName="fk_university" msprop:Generator_RelationVarName="relationfk_university" msprop:Generator_UserParentTable="variety_university" msprop:Generator_ParentPropName="variety_universityRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>